<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>coco可乐</title>
  
  <subtitle>coco</subtitle>
  <link href="https://www.z-lidong.top/atom.xml" rel="self"/>
  
  <link href="https://www.z-lidong.top/"/>
  <updated>2023-03-20T12:20:19.056Z</updated>
  <id>https://www.z-lidong.top/</id>
  
  <author>
    <name>利栋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树状数组</title>
    <link href="https://www.z-lidong.top/2023/03/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    <id>https://www.z-lidong.top/2023/03/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</id>
    <published>2023-03-19T16:00:00.000Z</published>
    <updated>2023-03-20T12:20:19.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h1><h2 id="时间复杂度为O（log-n）"><a href="#时间复杂度为O（log-n）" class="headerlink" title="时间复杂度为O（log n）"></a>时间复杂度为O（log n）</h2><p><img src="https://pic.imgdb.cn/item/64183b54a682492fcc24c676.jpg"></p><p><img src="https://pic.imgdb.cn/item/64184abba682492fcc4b6fd3.jpg"></p><p>求前缀和：（静态）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>]</span><br><span class="line"><span class="built_in">sum</span> = [<span class="number">0</span>]*<span class="number">20</span></span><br><span class="line"><span class="built_in">sum</span>[<span class="number">1</span>] = a[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">11</span>):      <span class="comment">#计算前缀和</span></span><br><span class="line">    <span class="built_in">sum</span>[i]=a[i]+<span class="built_in">sum</span>[i-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):      <span class="comment">#用前缀和反推计算数组a[]：</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">sum</span>[i]-<span class="built_in">sum</span>[i-<span class="number">1</span>],end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[5,8]=&quot;</span>,<span class="built_in">sum</span>[<span class="number">8</span>]-<span class="built_in">sum</span>[<span class="number">4</span>]) <span class="comment">#查询区间和，例如查询[5,8]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/64184b35a682492fcc4cd84b.jpg"></p><p>因此动态数组需要一种更好的解决办法：<strong>树状数组</strong><br><img src="https://pic.imgdb.cn/item/64184bf3a682492fcc4f0cfa.jpg"><br>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">lowbit</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, d</span>):</span><br><span class="line">    <span class="keyword">while</span>(x &lt; n):</span><br><span class="line">        tree[x] += d</span><br><span class="line">        x += lowbit(x)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">x</span>):</span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(x &gt; <span class="number">0</span>):</span><br><span class="line">        ans += tree[x]</span><br><span class="line">        x -= lowbit(x)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p>lowbit()功能就是找到一个二进制数中的最小的1的位置<br><img src="https://pic.imgdb.cn/item/64184c76a682492fcc502158.jpg"><br><img src="https://pic.imgdb.cn/item/64184cfda682492fcc5113ba.jpg"><br><img src="https://pic.imgdb.cn/item/64184d93a682492fcc5220f8.jpg"><br><img src="https://pic.imgdb.cn/item/64184dcda682492fcc52883c.jpg"><br><img src="https://pic.imgdb.cn/item/64184ed5a682492fcc5463c2.jpg"><br><em>例题——动态数组：</em><br><img src="https://pic.imgdb.cn/item/64184f1ba682492fcc54e67c.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lowbit</span>(<span class="params">x</span>):</span><br><span class="line">  <span class="keyword">return</span> x &amp; -x</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, d</span>):      <span class="comment">#修改元素a[x],  a[x] = a[x] + d</span></span><br><span class="line">    <span class="keyword">while</span>(x &lt;= N):</span><br><span class="line">        tree[x] += d</span><br><span class="line">        x += lowbit(x)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">x</span>):      <span class="comment">#返回前缀和sum = a[1] + a[2] +... + a[x]</span></span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(x &gt; <span class="number">0</span>):</span><br><span class="line">        ans += tree[x]</span><br><span class="line">        x -= lowbit(x)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">N=<span class="number">1000</span></span><br><span class="line">tree = [<span class="number">0</span>] * N</span><br><span class="line">a=[<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):             <span class="comment">#计算tree[]数组</span></span><br><span class="line">    add(i,a[i])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;old:[5,8]=&quot;</span>,<span class="built_in">sum</span>(<span class="number">8</span>)-<span class="built_in">sum</span>(<span class="number">4</span>)) <span class="comment">#查询区间和，例如查询[5,8]</span></span><br><span class="line">add(<span class="number">5</span>,<span class="number">100</span>)                        <span class="comment">#模拟一次修改： a[5] = a[5]+100</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;new:[5,8]=&quot;</span>,<span class="built_in">sum</span>(<span class="number">8</span>)-<span class="built_in">sum</span>(<span class="number">4</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;树状数组&quot;&gt;&lt;a href=&quot;#树状数组&quot; class=&quot;headerlink&quot; title=&quot;树状数组&quot;&gt;&lt;/a&gt;树状数组&lt;/h1&gt;&lt;h2 id=&quot;时间复杂度为O（log-n）&quot;&gt;&lt;a href=&quot;#时间复杂度为O（log-n）&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="python知识" scheme="https://www.z-lidong.top/categories/python%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>二叉树基础数据结构</title>
    <link href="https://www.z-lidong.top/2023/03/19/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://www.z-lidong.top/2023/03/19/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2023-03-18T16:00:00.000Z</published>
    <updated>2023-03-21T11:35:10.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><p><img src="https://pic.imgdb.cn/item/64185154a682492fcc58a57c.jpg"><br><img src="https://pic.imgdb.cn/item/641851b7a682492fcc596ac8.jpg"><br><img src="https://pic.imgdb.cn/item/64185304a682492fcc5cafe6.jpg"></p><h1 id="平衡二叉树："><a href="#平衡二叉树：" class="headerlink" title="平衡二叉树："></a>平衡二叉树：</h1><p><img src="https://pic.imgdb.cn/item/64191455a682492fcc9af83c.jpg"><br><strong>可见二叉树在结点非常庞大的数据中也能快速找到相应的节点<br>如：有100万个结点，想要找到最后一个节点也只需要走20步，可见二叉树是一种非常快速的数据结构，在此基础上可以形成高级数据结构</strong><br><em><strong>高级数据结构≈基于二叉树的数据结构</strong></em></p><h1 id="不平衡二叉树（效率低下）"><a href="#不平衡二叉树（效率低下）" class="headerlink" title="不平衡二叉树（效率低下）"></a>不平衡二叉树（效率低下）</h1><p><img src="https://pic.imgdb.cn/item/64191653a682492fcc9e0476.jpg"></p><h1 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h1><p>1.<img src="https://pic.imgdb.cn/item/641916f9a682492fcc9f60ae.jpg"><br>代码                       +                 解析：<img src="https://pic.imgdb.cn/item/64191e76a682492fccaf0f8f.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">c = <span class="built_in">int</span>(math.log(n,<span class="number">2</span>))+<span class="number">1</span>   <span class="comment">#一共有c层</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">0</span>]+<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())) <span class="comment">#a[1]~a[n]</span></span><br><span class="line">s = [<span class="number">0</span>] * (c+<span class="number">1</span>)   <span class="comment">#记录每层的和，s[1]~s[c]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,c+<span class="number">1</span>):            <span class="comment">#第1层到第c层</span></span><br><span class="line">    s[i] = <span class="built_in">sum</span>(a[<span class="number">2</span>**(i-<span class="number">1</span>): <span class="number">2</span>**i-<span class="number">1</span> +<span class="number">1</span>])<span class="comment">#注意切片范围</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s.index(<span class="built_in">max</span>(s)))</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/641985a7a682492fcc6f7fa7.jpg"><br><img src="https://pic.imgdb.cn/item/641985c7a682492fcc6fb9eb.jpg"><br><em>解释：</em><br><img src="https://pic.imgdb.cn/item/64198a2aa682492fcc7904df.jpg"></p><h2 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h2><h3 id="宽度优先遍历（BFS）-简单提及一下"><a href="#宽度优先遍历（BFS）-简单提及一下" class="headerlink" title="宽度优先遍历（BFS）  简单提及一下"></a>宽度优先遍历（BFS）  <em>简单提及一下</em></h3><p><img src="https://pic.imgdb.cn/item/6419951aa682492fcc8e709c.jpg"></p><h3 id="深度优先遍历（DFS）"><a href="#深度优先遍历（DFS）" class="headerlink" title="深度优先遍历（DFS）"></a>深度优先遍历（DFS）</h3><h6 id="先序序列，中序序列，后序序列"><a href="#先序序列，中序序列，后序序列" class="headerlink" title="先序序列，中序序列，后序序列"></a>先序序列，中序序列，后序序列</h6><p><img src="https://pic.imgdb.cn/item/6419958ba682492fcc8f43eb.jpg"><br><img src="https://pic.imgdb.cn/item/641995aca682492fcc8f8557.jpg"><br><img src="https://pic.imgdb.cn/item/641995cba682492fcc8fbced.jpg"><br><img src="/%5C2023-03-21-19-32-55.png"><br><img src="/%5C2023-03-21-19-35-03.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;二叉树&quot;&gt;&lt;a href=&quot;#二叉树&quot; class=&quot;headerlink&quot; title=&quot;二叉树&quot;&gt;&lt;/a&gt;二叉树&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/64185154a682492fcc58a57c.jpg&quot;&gt;</summary>
      
    
    
    
    <category term="python知识" scheme="https://www.z-lidong.top/categories/python%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>并查集高级数据结构</title>
    <link href="https://www.z-lidong.top/2023/03/19/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E5%B9%B6%E6%9F%A5%E9%9B%86python/"/>
    <id>https://www.z-lidong.top/2023/03/19/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E5%B9%B6%E6%9F%A5%E9%9B%86python/</id>
    <published>2023-03-18T16:00:00.000Z</published>
    <updated>2023-03-19T04:35:24.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高级数据结构：并查集"><a href="#高级数据结构：并查集" class="headerlink" title="高级数据结构：并查集"></a>高级数据结构：并查集</h1><p><strong>1.经典应用</strong><br>    <img src="https://pic.imgdb.cn/item/64167277a682492fcc0b7c6a.jpg"><br><strong>2.场景</strong><br>    <img src="https://pic.imgdb.cn/item/641672f3a682492fcc0c5729.jpg"><br><strong>3.并查集的操作</strong><br>初始化<br>合并<br>查询<br><strong>4.例子图</strong><br>    <img src="https://pic.imgdb.cn/item/641673aba682492fcc0dbf43.jpg"><br><strong>5.优化前代码</strong><br>复杂度（o（n））</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">init_set</span>(<span class="params">N</span>):    <span class="comment">#初始化    令s[i]=i</span></span><br><span class="line">    <span class="keyword">for</span> i  <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">        s.append(i)</span><br><span class="line">    <span class="comment">#或者s=list(range(N))</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_set</span>(<span class="params">x</span>):     <span class="comment">#查找</span></span><br><span class="line">    <span class="keyword">if</span> (x==s[x]):</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> find_set(x)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge_set</span>(<span class="params">x,y</span>):     <span class="comment">#合并</span></span><br><span class="line">    x=find_set(x)</span><br><span class="line">    y=find_set(y)</span><br><span class="line">    <span class="keyword">if</span> x!=y:   </span><br><span class="line">        s[x]=s[y]</span><br></pre></td></tr></table></figure><p><strong>6.优化代码</strong><br>复杂度为o（1）（其本质是两层的树）<br>1.<img src="https://pic.imgdb.cn/item/64167521a682492fcc10eff5.jpg"><br>2.<em>优化对比</em><br><img src="https://pic.imgdb.cn/item/64167564a682492fcc11b026.jpg"><br><em>3.例题</em><br><img src="https://pic.imgdb.cn/item/641675d0a682492fcc12f660.jpg"></p><p>————-代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">init_set</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        s.append(i)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_set</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">if</span>(x!=s[x]):</span><br><span class="line">        s[x]=find_set(s[x])</span><br><span class="line">    <span class="keyword">return</span> s[x]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge_set</span>(<span class="params">x,y</span>):</span><br><span class="line">    x=find_set(x)</span><br><span class="line">    y=find_set(y)</span><br><span class="line">    <span class="keyword">if</span>(x!=y):</span><br><span class="line">        s[x]=s[y]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N,M=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>(<span class="string">&#x27;请输入两个数，分别是学生数量，行数&#x27;</span>).split())</span><br><span class="line">s=[]</span><br><span class="line">init_set(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(M):</span><br><span class="line">    op,x,y=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line">    <span class="keyword">if</span> op==<span class="number">1</span>:</span><br><span class="line">        merge_set(x,y)</span><br><span class="line">    <span class="keyword">if</span> op==<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">if</span> find_set(x)==find_set(y):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;YES&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;NO&#x27;</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><em>例题</em><br><img src="https://pic.imgdb.cn/item/6416828ba682492fcc29e9b1.jpg"><br><img src="https://pic.imgdb.cn/item/64168490a682492fcc2eaef9.jpg"><br>————-代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_set</span>(<span class="params">x</span>):                    <span class="comment">#有路径压缩优化的查询</span></span><br><span class="line">    <span class="keyword">if</span>(x != s[x]):  s[x] = find_set(s[x])   </span><br><span class="line">    <span class="keyword">return</span> s[x]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge_set</span>(<span class="params">x, y</span>):</span><br><span class="line">    x = find_set(x); </span><br><span class="line">    y = find_set(y)</span><br><span class="line">    <span class="keyword">if</span> x == y:   <span class="keyword">return</span> <span class="literal">False</span>       <span class="comment">#原来就是同根的，不用合根</span></span><br><span class="line">    s[y] = s[x]</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span>                     <span class="comment">#合根一次</span></span><br><span class="line">m, n = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">k = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">s = <span class="built_in">list</span>(<span class="built_in">range</span>(m*n))             <span class="comment">#并查集初始化 s=[0,1,2,3,……]</span></span><br><span class="line">ans = m * n</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">    x, y = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">    <span class="keyword">if</span> merge_set(x, y):   ans -= <span class="number">1</span>   <span class="comment">#合根一次，ans减一</span></span><br><span class="line"><span class="built_in">print</span>(ans)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;高级数据结构：并查集&quot;&gt;&lt;a href=&quot;#高级数据结构：并查集&quot; class=&quot;headerlink&quot; title=&quot;高级数据结构：并查集&quot;&gt;&lt;/a&gt;高级数据结构：并查集&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1.经典应用&lt;/strong&gt;&lt;br&gt;    &lt;img sr</summary>
      
    
    
    
    <category term="python知识" scheme="https://www.z-lidong.top/categories/python%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>递归算法</title>
    <link href="https://www.z-lidong.top/2023/03/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E9%80%92%E5%BD%92/"/>
    <id>https://www.z-lidong.top/2023/03/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E9%80%92%E5%BD%92/</id>
    <published>2023-03-18T04:19:00.000Z</published>
    <updated>2023-03-18T12:11:27.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><p><img src="https://pic.imgdb.cn/item/6415a9c9a682492fccb75c9a.png"><br>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">global</span> cnt</span><br><span class="line">    cnt += <span class="number">1</span>                </span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span> <span class="keyword">or</span> n==<span class="number">2</span>:        </span><br><span class="line">       <span class="keyword">return</span> <span class="number">1</span>          </span><br><span class="line">    <span class="keyword">return</span> fib(n-<span class="number">1</span>)+fib(n-<span class="number">2</span>)  </span><br><span class="line"></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(fib(<span class="number">20</span>))   </span><br><span class="line"><span class="built_in">print</span>(cnt)               </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="————————–"><a href="#————————–" class="headerlink" title="————————–"></a>————————–</h2><p><img src="https://pic.imgdb.cn/item/6415a9eda682492fccb7a42b.png"></p><h2 id="————————–-1"><a href="#————————–-1" class="headerlink" title="————————–"></a>————————–</h2><p><img src="https://pic.imgdb.cn/item/6415aa23a682492fccb80195.png"></p><h2 id="————————–-2"><a href="#————————–-2" class="headerlink" title="————————–"></a>————————–</h2><p><img src="https://pic.imgdb.cn/item/6415aa33a682492fccb825ce.png"></p><h2 id="————————–-3"><a href="#————————–-3" class="headerlink" title="————————–"></a>————————–</h2><p><img src="https://pic.imgdb.cn/item/6415aa41a682492fccb8401e.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.setrecursionlimit(<span class="number">30000</span>) <span class="comment">#设置递归深度</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">global</span> cnt</span><br><span class="line">    cnt += <span class="number">1</span>   </span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span> <span class="keyword">or</span> n==<span class="number">2</span>:   </span><br><span class="line">       data[n]=<span class="number">1</span>; <span class="keyword">return</span> data[n]</span><br><span class="line">    <span class="keyword">if</span> data[n] != <span class="number">0</span>:   </span><br><span class="line">       <span class="keyword">return</span> data[n]</span><br><span class="line">    data[n] = fib(n-<span class="number">1</span>)+fib(n-<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> data[n]</span><br><span class="line">data=[<span class="number">0</span>]*<span class="number">3005</span> </span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(fib(<span class="number">3000</span>))       <span class="comment">#约等于4*10626</span></span><br><span class="line"><span class="built_in">print</span>(cnt)           <span class="comment">#递归次数，cnt=5997</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结一点"><a href="#总结一点" class="headerlink" title="总结一点"></a>总结一点</h3><h4 id="—"><a href="#—" class="headerlink" title="—-"></a>—-</h4><h4 id="—-1"><a href="#—-1" class="headerlink" title="- —- -"></a>- —- -</h4><p>养成使用递归深度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.setrecursionlimit(<span class="number">30000</span>) <span class="comment">#设置递归深度</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>的习惯</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;递归&quot;&gt;&lt;a href=&quot;#递归&quot; class=&quot;headerlink&quot; title=&quot;递归&quot;&gt;&lt;/a&gt;递归&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/6415a9c9a682492fccb75c9a.png&quot;&gt;&lt;br&gt;</summary>
      
    
    
    
    <category term="python知识" scheme="https://www.z-lidong.top/categories/python%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>华为鸿蒙系统知识点</title>
    <link href="https://www.z-lidong.top/2023/03/17/%E5%8D%8E%E4%B8%BA%E9%B8%BF%E8%92%99/"/>
    <id>https://www.z-lidong.top/2023/03/17/%E5%8D%8E%E4%B8%BA%E9%B8%BF%E8%92%99/</id>
    <published>2023-03-17T01:42:00.000Z</published>
    <updated>2023-03-17T10:46:09.816Z</updated>
    
    <content type="html"><![CDATA[<h1 id="暂时还无"><a href="#暂时还无" class="headerlink" title="暂时还无"></a>暂时还无</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;暂时还无&quot;&gt;&lt;a href=&quot;#暂时还无&quot; class=&quot;headerlink&quot; title=&quot;暂时还无&quot;&gt;&lt;/a&gt;暂时还无&lt;/h1&gt;</summary>
      
    
    
    
    <category term="华为鸿蒙" scheme="https://www.z-lidong.top/categories/%E5%8D%8E%E4%B8%BA%E9%B8%BF%E8%92%99/"/>
    
    
  </entry>
  
  <entry>
    <title>数据库知识</title>
    <link href="https://www.z-lidong.top/2023/03/17/%E6%95%B0%E6%8D%AE%E5%BA%93mysql/"/>
    <id>https://www.z-lidong.top/2023/03/17/%E6%95%B0%E6%8D%AE%E5%BA%93mysql/</id>
    <published>2023-03-17T01:05:00.000Z</published>
    <updated>2023-03-17T01:40:16.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="数据库入门"><a href="#数据库入门" class="headerlink" title="数据库入门"></a>数据库入门</h2><p>1.1 数据库概述</p><p>数据库： 是按照数据结构来组织，存储和管理数据的仓库，其本身可被看作电子化的文件柜，用户可以对文件中的数据进行增加删除修改，查找等操作。</p><p>1.数据库提供了一个存储空间用来存储各种数据，可以将数据库视为一个存储数据的容器</p><p>2.数据管理系统：专门用于创建和管理数据库的一套软件，介于应用程序和操作系统之间   如mysql  sqlserver Oracle  DB2 </p><p>1.1.2 数据库技术的发展</p><pre><code>1.人工管理阶段2.文件系统阶段3.数据库系统阶段       特点    1.数据结构化            2.数据共享            3.数据独立性高(逻辑独立性和物理独立性) 逻辑独立性：数据库中的数据的逻辑结构和应用程序相互独立            4.数据统一管理与控制</code></pre><p>1.1.3 三级模式和二级映像</p><pre><code>三级模式：数据库管理系统从三个层次来管理数据，分别是外部层 概念层 内部层          这三个层次分别对应三种不同类型的模式，分别是外模式、概念模式、和内模式        外模式面向应用程序；        内模式（称为物理模式、存储模式）面向物理上的数据库，描述数据在磁盘中如何存储        概念模式（又称为逻辑模式，模式）面向数据库设计人员，描述数据的整体逻辑结构</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;h2 id=&quot;数据库入门&quot;&gt;&lt;a href=&quot;#数据库入门&quot; class=&quot;headerlink&quot; title=&quot;数据库入门&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="mysql数据库基础知识" scheme="https://www.z-lidong.top/categories/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>数据库知识</title>
    <link href="https://www.z-lidong.top/2023/03/17/%E6%95%B0%E6%8D%AE%E5%BA%93mysql%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
    <id>https://www.z-lidong.top/2023/03/17/%E6%95%B0%E6%8D%AE%E5%BA%93mysql%E7%AC%AC%E4%BA%8C%E7%AB%A0/</id>
    <published>2023-03-17T01:05:00.000Z</published>
    <updated>2023-03-17T10:47:48.458Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第二章&quot;&gt;&lt;a href=&quot;#第二章&quot; class=&quot;headerlink&quot; title=&quot;第二章&quot;&gt;&lt;/a&gt;第二章&lt;/h1&gt;&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;</summary>
      
    
    
    
    <category term="mysql数据库基础知识" scheme="https://www.z-lidong.top/categories/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.z-lidong.top/2023/03/16/matlab%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://www.z-lidong.top/2023/03/16/matlab%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2023-03-16T04:39:00.000Z</published>
    <updated>2023-03-18T12:08:23.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matlab图像几何变换"><a href="#matlab图像几何变换" class="headerlink" title="matlab图像几何变换"></a>matlab图像几何变换</h1><h2 id="图像比例缩放变换"><a href="#图像比例缩放变换" class="headerlink" title="图像比例缩放变换"></a>图像比例缩放变换</h2><h3 id="主要函数：imresize"><a href="#主要函数：imresize" class="headerlink" title="主要函数：imresize()"></a>主要函数：imresize()</h3><p>实现代码：<br><img src="https://pic.imgdb.cn/item/6415a93ba682492fccb65c0d.png"></p><h2 id="图像平移变换"><a href="#图像平移变换" class="headerlink" title="图像平移变换"></a>图像平移变换</h2><h3 id="主要函数：translate-imdilate-imtranslate"><a href="#主要函数：translate-imdilate-imtranslate" class="headerlink" title="主要函数：translate(); imdilate(); imtranslate()"></a>主要函数：translate(); imdilate(); imtranslate()</h3><p>实现代码：<br><img src="https://pic.imgdb.cn/item/6415a89aa682492fccb5533a.png"></p><h2 id="图像镜像变换"><a href="#图像镜像变换" class="headerlink" title="图像镜像变换"></a>图像镜像变换</h2><p>主要函数： maketform(); imtransform();<br>实现代码：<br><img src="https://pic.imgdb.cn/item/6415a973a682492fccb6c540.png"></p><h2 id="图像镜像变换-1"><a href="#图像镜像变换-1" class="headerlink" title="图像镜像变换"></a>图像镜像变换</h2><p>主要函数： imrotate()<br>实现代码：<br><img src="https://pic.imgdb.cn/item/6415a993a682492fccb6fceb.png"></p><h2 id="图像添加椒盐噪声"><a href="#图像添加椒盐噪声" class="headerlink" title="图像添加椒盐噪声"></a>图像添加椒盐噪声</h2><p>主要函数：saltpepper()<br>实现代码：<br><img src="https://pic.imgdb.cn/item/6415a9a7a682492fccb71ede.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;matlab图像几何变换&quot;&gt;&lt;a href=&quot;#matlab图像几何变换&quot; class=&quot;headerlink&quot; title=&quot;matlab图像几何变换&quot;&gt;&lt;/a&gt;matlab图像几何变换&lt;/h1&gt;&lt;h2 id=&quot;图像比例缩放变换&quot;&gt;&lt;a href=&quot;#图像比例缩</summary>
      
    
    
    
    <category term="matlab基础知识" scheme="https://www.z-lidong.top/categories/matlab%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown知识点基础</title>
    <link href="https://www.z-lidong.top/2023/03/15/markdown%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://www.z-lidong.top/2023/03/15/markdown%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2023-03-15T11:46:00.000Z</published>
    <updated>2023-03-15T11:53:35.307Z</updated>
    
    <content type="html"><![CDATA[<h3 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h3><p><a href="https://www.bilibili.com/video/BV1si4y1472o/?spm_id_from=333.1007.top_right_bar_window_history.content.click">链接（bi站）</a></p><h3 id="图片粘贴"><a href="#图片粘贴" class="headerlink" title="图片粘贴"></a>图片粘贴</h3><p>复制图片  然后在md文件中 CTRL+ALT+V</p><h3 id="网址链接"><a href="#网址链接" class="headerlink" title="网址链接"></a>网址链接</h3><p>复制网址，对选中的文字进行CTRL + V</p><h3 id="文字加粗"><a href="#文字加粗" class="headerlink" title="文字加粗"></a>文字加粗</h3><p>采用<strong>加粗</strong>  或者 ctrl+B</p><h3 id="文字斜体"><a href="#文字斜体" class="headerlink" title="文字斜体"></a>文字斜体</h3><p>采用<em>斜体</em>  或者 ctrl+i</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;视频链接&quot;&gt;&lt;a href=&quot;#视频链接&quot; class=&quot;headerlink&quot; title=&quot;视频链接&quot;&gt;&lt;/a&gt;视频链接&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1si4y1472o/?spm_id_f</summary>
      
    
    
    
    <category term="markdown基础知识" scheme="https://www.z-lidong.top/categories/markdown%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>网站搭建教程</title>
    <link href="https://www.z-lidong.top/2023/03/15/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.z-lidong.top/2023/03/15/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</id>
    <published>2023-03-15T11:41:00.000Z</published>
    <updated>2023-03-18T07:11:53.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是一个网站搭建的教程"><a href="#这是一个网站搭建的教程" class="headerlink" title="这是一个网站搭建的教程"></a>这是一个网站搭建的教程</h1><h2 id="内容以连接形式呈现"><a href="#内容以连接形式呈现" class="headerlink" title="内容以连接形式呈现"></a>内容以连接形式呈现</h2><h3 id="开始正文"><a href="#开始正文" class="headerlink" title="开始正文"></a>开始正文</h3><p><a href="https://www.bilibili.com/video/BV1sK411Q7S7/?spm_id_from=333.788&vd_so">连接教程</a></p><p>个人网站展示：（仅首页）<br><img src="https://yimitool.com/i/2023/03/18/ouvzlg.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是一个网站搭建的教程&quot;&gt;&lt;a href=&quot;#这是一个网站搭建的教程&quot; class=&quot;headerlink&quot; title=&quot;这是一个网站搭建的教程&quot;&gt;&lt;/a&gt;这是一个网站搭建的教程&lt;/h1&gt;&lt;h2 id=&quot;内容以连接形式呈现&quot;&gt;&lt;a href=&quot;#内容以连接形式呈</summary>
      
    
    
    
    <category term="网站搭建" scheme="https://www.z-lidong.top/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="https://www.z-lidong.top/2023/03/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://www.z-lidong.top/2023/03/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2023-03-13T16:00:00.000Z</published>
    <updated>2023-03-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">menu</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;2.西红花生&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.鱼香肉丝&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;这是我的第一篇文章&quot;&gt;&lt;a href=&quot;#这是我的第一篇文章&quot; class=&quot;headerlink&quot; title=&quot;这是我的第一篇文章&quot;&gt;&lt;/a&gt;这是我的第一篇文章&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    <category term="c++" scheme="https://www.z-lidong.top/categories/c/"/>
    
    
  </entry>
  
</feed>
